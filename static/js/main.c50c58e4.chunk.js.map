{"version":3,"sources":["hooks/useFetch.js","context/IdContext.js","components/PostItem.jsx","components/PostsPage.jsx","components/NewPost.jsx","components/ViewPost.jsx","components/PostEdit.jsx","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","options","useState","data","error","state","setState","useEffect","fetchData","a","fetch","response","json","IdContext","React","createContext","PostItem","post","create","useContext","to","id","className","onClick","content","created","moment","Date","fromNow","PostsPage","process","map","NewPost","value","setValue","click","setClick","onSubmit","e","preventDefault","trim","body","method","headers","JSON","stringify","then","result","catch","err","console","log","onChange","target","type","ViewPost","clickDel","setClickDel","clickEdit","setClickEdit","PostEdit","App","Provider","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c50c58e4.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\n\nfunction useFetch(url, options) {\n    const [state, setState] = useState({\n        data: null,\n        error: null\n    });\n\n    useEffect(() => {\n        if (!url) return null\n\n        const fetchData = async () => {\n\n            try {\n                const response = await fetch(url, options);\n                const data = await response.json();\n\n                setState({ data })\n            } catch (error) {\n                setState({ error })\n\n            }\n            \n        }\n\n        fetchData()\n    }, [url])\n\n    return state\n}\n\nexport default useFetch","import React from 'react';\n\nconst IdContext = React.createContext({});\n\nexport default IdContext","import {useContext} from 'react';\nimport IdContext from '../context/IdContext';\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\nimport 'moment/locale/ru';\n\nfunction PostItem({ post }) {\n\tconst create = useContext(IdContext)\n\n\tconst onClick = () => {\n\t\tcreate.id = post.id\n\t\tcreate.content = post.content\n\t\tcreate.created = post.created\n\t}\n\n    return (\n\t\t<Link to={`/posts/${post.id}`}>\n\t\t\t<li className=\"item\" onClick={onClick}>\n\t\t\t\t<header>\n\t\t\t\t\t<div className=\"user\">\n\t\t\t\t\t\t<p>Ivan Petrov</p>\n\t\t\t\t\t\t<p className=\"date\">{moment(new Date(post.created), 'YYYYMMDDhhmm').fromNow()}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<div className=\"content\">{post.content}</div>\n\t\t\t</li>\n\t  \t</Link>\n    )\n}\n\nexport default PostItem","import useFetch from '../hooks/useFetch';\nimport {Link} from 'react-router-dom';\nimport PostItem from './PostItem';\n\nfunction PostsPage() {\n  const { data, error } = useFetch(`${process.env.REACT_APP_URL}/posts`);\n\n  return (\n    <ul className=\"list\">\n\t\t\t<li className=\"item item-btn\">\n\t\t\t\t<Link to=\"/posts/new\"><button className=\"btn\">Создать пост</button></Link>\n\t\t\t</li>\n\t\t\t\t{error && <li className=\"error\">Что-то пошло не так!!!</li>}\n\t\t\t\t{data && data.map(post => <PostItem key={post.id} post={post} />)}  \n    </ul>\n\n        \n  )\n}\n\nexport default PostsPage","import {Link, Redirect} from 'react-router-dom';\nimport {useState} from 'react';\n\nfunction NewPost() {\n  const [value, setValue] = useState('');\n  const [click, setClick] = useState(false);\n\n  const onChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!value.trim()) return\n\n    const body = {id: 0, content: value};\n    \n    try {\n      fetch(`${process.env.REACT_APP_URL}/posts`, { \n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        })\n        .then(response => response)\n        .then(result => {\n          setValue('');\n          setClick(true)\n        \n        })\n        .catch(err => console.log(err))\n    } catch (err) {\n      console.log(err)\n    }\n    \n  }\n\n  return (\n    <div className=\"newPost\">\n      <div className=\"newPost__box\">\n        <Link to=\"/\"><button className=\"btn-close\">X</button></Link>\n        <form className=\"form\" onSubmit={onSubmit}>\n          <textarea className=\"textarea\" value={value} onChange={onChange}></textarea>\n          <button type=\"submit\" className=\"btn\">Опубликовать\n          {click ? <Redirect to=\"/\" /> : null}\n          </button>\n        </form>\n      </div> \n    </div>\n  )\n}\n\nexport default NewPost","import IdContext from \"../context/IdContext\";\nimport {useContext, useState} from 'react';\nimport {Redirect} from 'react-router-dom';\n\nfunction ViewPost() {\n    const create = useContext(IdContext);\n    const [clickDel, setClickDel] = useState(false);\n    const [clickEdit, setClickEdit] = useState(false);\n\n    const onEdit = () => {\n        setClickEdit(true)\n    }\n\n    const onDelete = () => {\n\n        try {\n            fetch(`${process.env.REACT_APP_URL}/posts/${create.id}`, {method: 'DELETE'})\n              .then(response => response)\n              .then(result => setClickDel(true))\n              .catch(err => console.log(err))\n          } catch (err) {\n            console.log(err)\n          }\n    }\n        \n    return (\n        <div className=\"list\">\n            <div className=\"item\">\n                <header>\n                    <div className=\"user\">MR.Smith</div>\n                </header>\n                <div className=\"content\">{create.content}</div>\n                <div className=\"control\">\n                    <button className=\"btn\" onClick={onEdit}>Изменить</button>\n                    <button className=\"btn delete\" onClick={onDelete}>Удалить</button>\n                    {clickDel ? <Redirect to=\"/\" /> : null}\n                    {clickEdit ? <Redirect to=\"/posts/edit\" /> : null}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewPost","import {useContext, useState} from 'react';\nimport IdContext from '../context/IdContext';\nimport {Link, Redirect} from 'react-router-dom';\n\nfunction PostEdit() {\n    const create = useContext(IdContext);\n    const [value, setValue] = useState(create.content);\n    const [click, setClick] = useState(false);\n\n    const onChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!value.trim()) return\n\n        const body = {id: create.id, content: value};\n        \n        try {\n            fetch(`${process.env.REACT_APP_URL}/posts`, { \n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(body)\n                })\n                .then(response => response)\n                .then(result => {\n                    setValue('');\n                    setClick(true)\n            })\n                .catch(err => console.log(err))\n        } catch (err) {\n            console.log(err)\n        }   \n    }\n\n    return (\n        <div className=\"newPost\">\n            <div className=\"newPost__box\">\n                <div>Редактировать пост\n                    <Link to={`/posts/${create.id}`}><button className=\"btn-close\">X</button></Link>\n                </div>\n                <form className=\"form\" onSubmit={onSubmit}>\n                <textarea className=\"textarea\" value={value} onChange={onChange}></textarea>\n                <button type=\"submit\" className=\"btn\">Сохранить\n                {click ? <Redirect to=\"/\" /> : null}\n                </button>\n                </form>\n            </div> \n        </div>\n    )\n}\n\nexport default PostEdit","import React, {useState} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport PostsPage from './components/PostsPage';\nimport NewPost from './components/NewPost';\nimport ViewPost from './components/ViewPost';\nimport IdContext from './context/IdContext';\nimport PostEdit from './components/PostEdit';\n\nfunction App() {\n  const [create] = useState({id: null, content: null, created: null})\n\n  return (\n    <IdContext.Provider value={create}>\n      <Router>\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/posts/new\" component={NewPost} />\n            <Route path=\"/posts/edit\" component={PostEdit} />\n            <Route path=\"/posts/:id\" component={ViewPost} />\n            <Route path=\"/\" component={PostsPage} />\n          </Switch>\n        </div>\n      </Router>\n    </IdContext.Provider>  \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}